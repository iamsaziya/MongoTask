<!-- <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Calendar UI</title>
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons+Round"
      rel="stylesheet"
    />

    <style>
      :root {
        font-size: 62.5%;
      }

      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        font-size: 1.6rem;
      }

      .container {
        display: flex;
        height: 100vh;
      }

      .sidebar {
        width: 20rem;
        background-color: #f5f5f5;
        padding: 2rem;
      }

      .logo {
        font-size: 3rem;
        margin-bottom: 2rem;
      }

      nav ul {
        list-style-type: none;
        padding: 0;
      }

      nav li {
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        cursor: pointer;
      }

      nav li.active {
        color: #6200ee;
      }

      .material-icons-round {
        margin-right: 1rem;
      }

      main {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
      }

      header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2rem;
        border-bottom: 0.1rem solid #e0e0e0;
      }

      .search-bar {
        display: flex;
        align-items: center;
        background-color: #f5f5f5;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
      }

      .search-bar input {
        border: none;
        background: transparent;
        margin-left: 1rem;
        font-size: 1.6rem;
      }

      .header-actions button {
        background-color: #6200ee;
        color: white;
        border: none;
        padding: 1rem 2rem;
        margin-left: 1rem;
        border-radius: 2rem;
        cursor: pointer;
        display: flex;
        align-items: center;
      }

      .calendar-container {
        flex-grow: 1;
        padding: 2rem;
        display: flex;
        flex-direction: column;
      }

      .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
      }

      .calendar-nav {
        display: flex;
        align-items: center;
      }

      .calendar-nav button {
        background: none;
        border: none;
        cursor: pointer;
      }

      .view-options button {
        background: none;
        border: none;
        cursor: pointer;
        margin-left: 1rem;
      }

      .view-options button.active {
        color: #6200ee;
      }

      .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 0.5rem;
        flex-grow: 1;
      }

      .calendar-day {
        border: 0.1rem solid #e0e0e0;
        padding: 0.5rem;
        min-height: 10rem;
      }

      .calendar-day.other-month {
        color: #bdbdbd;
      }

      .calendar-day.today {
        background-color: #e8f5e9;
      }

      .event {
        background-color: #bbdefb;
        padding: 0.2rem 0.5rem;
        margin-bottom: 0.2rem;
        border-radius: 0.2rem;
        font-size: 1.2rem;
      }

      .side-panel {
        width: 30rem;
        padding: 2rem;
        border-left: 0.1rem solid #e0e0e0;
      }

      .mini-calendar {
        margin-bottom: 2rem;
      }

      .activity-feed {
        border-top: 0.1rem solid #e0e0e0;
        padding-top: 2rem;
      }

      .activity-item {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
      }

      .activity-item img {
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        margin-right: 1rem;
      }

      .progress-circle {
        position: relative;
        width: 10rem;
        height: 10rem;
        margin: 2rem auto;
      }

      .progress-circle svg {
        width: 100%;
        height: 100%;
      }

      .progress-circle svg circle {
        fill: none;
        stroke: #e0e0e0;
        stroke-width: 8;
        transform: translate(0.5rem, 0.5rem);
      }

      .progress-circle svg circle:nth-child(2) {
        stroke: #6200ee;
        stroke-dasharray: 251.2;
        stroke-dashoffset: 77.872;
        transform: rotate(-90deg);
        transform-origin: center;
      }

      .percentage {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
      }

      .percentage h2 {
        font-size: 2.4rem;
        margin: 0;
      }

      .percentage span {
        font-size: 1.4rem;
      }

      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
      }

      .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 2rem;
        border: 0.1rem solid #888;
        width: 30rem;
        border-radius: 0.5rem;
      }

      .modal-content h2 {
        margin-top: 0;
      }

      .modal-content form {
        display: flex;
        flex-direction: column;
      }

      .modal-content input {
        margin-bottom: 1rem;
        padding: 0.5rem;
        font-size: 1.6rem;
      }

      .modal-actions {
        display: flex;
        justify-content: flex-end;
      }

      .modal-actions button {
        margin-left: 1rem;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 0.2rem;
        cursor: pointer;
      }

      .modal-actions button:first-child {
        background-color: #f44336;
        color: white;
      }

      .modal-actions button:last-child {
        background-color: #4caf50;
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <aside class="sidebar">
        <div class="logo">
          <span class="material-icons-round">event</span>
        </div>
        <nav>
          <ul>
            <li>
              <span class="material-icons-round">dashboard</span> Dashboard
            </li>
            <li><span class="material-icons-round">chat</span> Discuss</li>
            <li class="active">
              <span class="material-icons-round">calendar_today</span> Calendar
            </li>
            <li>
              <span class="material-icons-round">contact_mail</span> Contact
            </li>
            <li><span class="material-icons-round">business</span> CRM</li>
            <li><span class="material-icons-round">settings</span> Settings</li>
            <li><span class="material-icons-round">receipt</span> Invoicing</li>
          </ul>
        </nav>
      </aside>
      <main>
        <header>
          <div class="search-bar">
            <span class="material-icons-round">search</span>
            <input type="text" placeholder="Search..." />
          </div>
          <div class="header-actions">
            <button id="create-event">
              <span class="material-icons-round">add</span> Event
            </button>
            <button>
              <span class="material-icons-round">star</span> Favorites
            </button>
          </div>
        </header>
        <div class="calendar-container">
          <div class="calendar-header">
            <h2>Calendar</h2>
            <div class="calendar-nav">
              <button id="prev-month">
                <span class="material-icons-round">chevron_left</span>
              </button>
              <h3 id="current-month">April 2022</h3>
              <button id="next-month">
                <span class="material-icons-round">chevron_right</span>
              </button>
            </div>
            <div class="view-options">
              <button class="active">Month</button>
              <button>Week</button>
              <button>Day</button>
              <button>Year</button>
            </div>
          </div>
          <div class="calendar-grid" id="calendar-grid"></div>
        </div>
        <div class="side-panel">
          <div class="mini-calendar" id="mini-calendar"></div>
          <div class="activity-feed">
            <h4>Activity</h4>
            <div class="activity-item">
              <img src="https://placekitten.com/40/40" alt="User Avatar" />
              <div>
                <h5>Jenny Wilson</h5>
                <p>Commented on Sales</p>
                <small>1:32 PM</small>
              </div>
            </div>
            <div class="progress-circle">
              <svg>
                <circle cx="40" cy="40" r="36"></circle>
                <circle cx="40" cy="40" r="36"></circle>
              </svg>
              <div class="percentage">
                <h2>69<span>%</span></h2>
                <p>Total</p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
    <div class="modal" id="event-modal">
      <div class="modal-content">
        <h2>Create New Event</h2>
        <form id="event-form">
          <input
            type="text"
            id="event-title"
            placeholder="Event Title"
            required
          />
          <input type="date" id="event-date" required />
          <input type="time" id="event-time" required />
          <div class="modal-actions">
            <button type="button" id="cancel-event">Cancel</button>
            <button type="submit">Create</button>
          </div>
        </form>
      </div>
    </div>
  
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const calendarGrid = document.getElementById("calendar-grid");
        const miniCalendar = document.getElementById("mini-calendar");
        const currentMonthElement = document.getElementById("current-month");
        const prevMonthButton = document.getElementById("prev-month");
        const nextMonthButton = document.getElementById("next-month");
        const createEventButton = document.getElementById("create-event");
        const eventModal = document.getElementById("event-modal");
        const cancelEventButton = document.getElementById("cancel-event");
        const eventForm = document.getElementById("event-form");

        let currentDate = new Date();
        let events = [];

        function renderCalendar(date, container, isMini = false) {
          const year = date.getFullYear();
          const month = date.getMonth();
          const firstDay = new Date(year, month, 1);
          const lastDay = new Date(year, month + 1, 0);
          const daysInMonth = lastDay.getDate();
          const startingDay = firstDay.getDay();

          container.innerHTML = "";

          if (!isMini) {
            currentMonthElement.textContent = `${date.toLocaleString(
              "default",
              { month: "long" }
            )} ${year}`;
          }

          for (let i = 0; i < startingDay; i++) {
            const dayElement = document.createElement("div");
            dayElement.classList.add("calendar-day", "other-month");
            container.appendChild(dayElement);
          }

          for (let i = 1; i <= daysInMonth; i++) {
            const dayElement = document.createElement("div");
            dayElement.classList.add("calendar-day");
            dayElement.textContent = i;

            if (isMini) {
              dayElement.classList.add("mini-day");
            } else {
              const dayEvents = events.filter((event) => {
                const eventDate = new Date(event.date);
                return (
                  eventDate.getDate() === i &&
                  eventDate.getMonth() === month &&
                  eventDate.getFullYear() === year
                );
              });

              dayEvents.forEach((event) => {
                const eventElement = document.createElement("div");
                eventElement.classList.add("event");
                eventElement.textContent = event.title;
                dayElement.appendChild(eventElement);
              });
            }

            if (
              i === currentDate.getDate() &&
              month === currentDate.getMonth() &&
              year === currentDate.getFullYear()
            ) {
              dayElement.classList.add("today");
            }

            container.appendChild(dayElement);
          }
        }

        function updateCalendars() {
          renderCalendar(currentDate, calendarGrid);
          renderCalendar(currentDate, miniCalendar, true);
        }

        prevMonthButton.addEventListener("click", () => {
          currentDate.setMonth(currentDate.getMonth() - 1);
          updateCalendars();
        });

        nextMonthButton.addEventListener("click", () => {
          currentDate.setMonth(currentDate.getMonth() + 1);
          updateCalendars();
        });

        createEventButton.addEventListener("click", () => {
          eventModal.style.display = "block";
        });

        cancelEventButton.addEventListener("click", () => {
          eventModal.style.display = "none";
        });

        eventForm.addEventListener("submit", (e) => {
          e.preventDefault();
          const title = document.getElementById("event-title").value;
          const date = document.getElementById("event-date").value;
          const time = document.getElementById("event-time").value;

          events.push({ title, date: `${date}T${time}` });
          updateCalendars();
          eventModal.style.display = "none";
          eventForm.reset();
        });

        updateCalendars();
      });
    </script>
  </body>
</html> -->
